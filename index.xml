<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Dom Williams</title><link>https://domwillia.ms/</link><description>Personal blog about Rust, gamedev, and other programmery joys.</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sat, 27 Feb 2021 11:27:07 +0000</lastBuildDate><item><title>The Bane of TODOs</title><link>https://domwillia.ms/todos</link><description>TODOs are great. In my head they're short and concise notes that will remind future me about issues and outstanding work that he'll get to one day. They'll be ticked off one by one in small commits that paint a beautifully satisfying `git log`. Surely?</description><guid isPermaLink="true">https://domwillia.ms/todos</guid><pubDate>Mon, 01 Jun 2020 12:00:00 +0000</pubDate></item><item><title>Devlog #0: vision and goals</title><link>https://domwillia.ms/devlog0</link><description>This post aims to introduce my ambitious, long-term gamedev project, along with my vision and long term goals for it. In essence, it could be described as a deep simulation, not unlike and very much inspired by Dwarf Fortress and Rimworld.</description><guid isPermaLink="true">https://domwillia.ms/devlog0</guid><pubDate>Thu, 04 Jun 2020 12:00:00 +0000</pubDate></item><item><title>Devlog #1: fixed timestep</title><link>https://domwillia.ms/devlog1</link><description>I cover the core game loop, why a fixed timestep is required and how it's implemented, topped off with a glorious comparison gif.</description><guid isPermaLink="true">https://domwillia.ms/devlog1</guid><pubDate>Tue, 09 Jun 2020 12:00:00 +0000</pubDate></item><item><title>Devlog #2: game engine architecture</title><link>https://domwillia.ms/devlog2</link><description>A deep dive into my game engine architecture, looking at how the simulation is entirely separate from its visual representation.</description><guid isPermaLink="true">https://domwillia.ms/devlog2</guid><pubDate>Fri, 10 Jul 2020 12:00:00 +0000</pubDate></item><item><title>Devlog #3: entity movement</title><link>https://domwillia.ms/devlog3</link><description>A barely coherent rant about a year of progress (or lack thereof) in the realm of entity movement and path finding.</description><guid isPermaLink="true">https://domwillia.ms/devlog3</guid><pubDate>Fri, 28 Aug 2020 12:00:00 +0000</pubDate></item><item><title>Devlog #4: entity activities</title><link>https://domwillia.ms/devlog4</link><description>A technical dive into how living entities do the things the brain tells them to do without crippling game performance.</description><guid isPermaLink="true">https://domwillia.ms/devlog4</guid><pubDate>Sat, 21 Nov 2020 12:00:00 +0000</pubDate></item><item><title>Application-wide panic handling</title><link>https://domwillia.ms/panik</link><description>Panics in Rust are normally isolated to the thread that caused them, and are sometimes recoverable. This post introduces panik-rs, a crate to make panics on all threads fatal (to the application!) and prevent them from being silently swallowed.</description><guid isPermaLink="true">https://domwillia.ms/panik</guid><pubDate>Tue, 09 Feb 2021 12:00:00 +0000</pubDate></item></channel></rss>